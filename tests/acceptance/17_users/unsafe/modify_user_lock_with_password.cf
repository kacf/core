#######################################################
#
# Test locking a user and setting a password.
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
}

#######################################################

bundle agent init
{
  users:
    "johndoe"
      policy => "present";
}

#######################################################

bundle agent test
{
  vars:
    "hash" string => "$1$vUsR5eoG$cci6C2jKvoYNuyjL5macS1";

  users:
    "johndoe"
      policy => "locked",
      password => test_password;
}

body password test_password
{
  format => "hash";
  data => "$(test.hash)";
}

#######################################################

bundle agent check
{
  classes:
    "ok_passwd" not => strcmp("0", countlinesmatching("johndoe:[^:]*:[^:]*:[^:]*:[^:]*:.*", "/etc/passwd"));
    # Notice the [^:] without * at the end. That field should be *something*.
    "ok_shadow" not => strcmp("0", countlinesmatching("johndoe:![^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:][^:]*:.*", "/etc/shadow"));

    "ok" and => { "ok_passwd", "ok_shadow" };

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
