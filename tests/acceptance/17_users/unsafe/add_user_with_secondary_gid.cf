#######################################################
#
# Test adding a user with a secondary gid.
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub", "user_queries.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
}

#######################################################

body perms init_perms_body
{
  groups => { "2" };
  mode => "664";
}

bundle agent init
{
  # Remove him first, should he already be present.
  users:
    "johndoe"
      policy => "absent";

  files:
    "$(G.testfile)"
      create => "true",
      perms => init_perms_body;
}

#######################################################

body contain test_contain_body
{
  useshell => "useshell";
}

bundle agent test
{
  users:
    "johndoe"
      policy => "present",
      # "2" is "bin" on most systems.
      groups_secondary => { "2" };

  commands:
    "sudo -u johndoe /bin/sh -c '$(G.echo) Succeeded > $(G.testfile)'"
      contain => test_contain_body;
}

#######################################################

bundle agent check
{
  classes:
    "ok" not => strcmp("0", countlinesmatching("Succeeded", "$(G.testfile)"));

  reports:
    ok|windows::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
