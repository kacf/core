#######################################################
#
# Test modifying a user with many attributes.
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub", "user_queries.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
}

#######################################################

bundle agent init
{
  # Start out with other attributes.
  users:
    "johndoe"
      policy => "present",
      password => init_password,
      uid => "8765",
      group_primary => "3",
      groups_secondary => { "bin" },
      home_dir => "/home/johndoe",
      shell => "$(G.cat)",
      description => "Wrong!";
}

body password init_password
{
  format => "plaintext";
  data => "WrongPassword";
}

#######################################################

bundle agent test
{
  vars:
    "hash" string => "$1$vUsR5eoG$cci6C2jKvoYNuyjL5macS1";
    "desc_string" string => "This description should make the CFEngine test pass";

  users:
    "johndoe"
      policy => "present",
      password => test_password,
      uid => "9876",
      # "2" is "bin" on most systems.
      group_primary => "2",
      groups_secondary => { "sys" },
      home_dir => "/user_directories/johndoe",
      shell => "$(G.echo)",
      description => "$(desc_string)";
}

body password test_password
{
  format => "hash";
  data => "$(hash)";
}

#######################################################

bundle agent check
{
  vars:
    "hash" string => escape("$(test.hash)");

  classes:
    "passwd_ok" not => strcmp("0", countlinesmatching("johndoe:[^:]*:9876:2:$(test.desc_string):/user_directories/johndoe:$(G.echo)", "/etc/passwd"));
    "bin_group_ok" not => strcmp("0", countlinesmatching("sys:[^:]*:[^:]*:[^:]*johndoe.*", "/etc/group"));
    "sys_group_ok" expression => strcmp("0", countlinesmatching("bin:[^:]*:[^:]*:[^:]*johndoe.*", "/etc/group"));
    "shadow_ok" not => strcmp("0", countlinesmatching("johndoe:$(hash):.*", "/etc/shadow"));

    "ok" and => { "passwd_ok", "bin_group_ok", "sys_group_ok", "shadow_ok" };

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
